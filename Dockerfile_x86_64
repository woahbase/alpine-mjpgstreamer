# syntax=docker/dockerfile:1
#
ARG IMAGEBASE=frommakefile
#
FROM ${IMAGEBASE} AS builder
#
ARG NPROC=6
# ARG REPO=https://github.com/jacksonliam/mjpg-streamer
ARG REPO=https://github.com/ArduCAM/mjpg-streamer
ARG VERSION=master
#
COPY patches/ /tmp/
#
RUN set -xe \
    && apk add --no-cache --purge -uU \
        build-base \
        cmake \
        git \
        libgphoto2-dev \
        libjpeg-turbo-dev \
        linux-headers \
        sdl12-compat-dev \
#
        libcamera-dev \
        # libcamera-gstreamer \
        libcamera-tools \
        libcamera-v4l2 \
#
        libprotobuf \
        protobuf-c-dev \
        zeromq-dev \
#
        # ffmpeg
        # opencv-dev \
        # python3-dev \
        # py3-opencv \
        # py3-numpy \
#
# compile mjpg_streamer
    # && mkdir /tmp/build \
    # && cd /tmp/build \
    # && curl -jSLNO ${REPO}/archive/${VERSION}.tar.gz \
    # && tar -xf ${VERSION}.tar.gz \
    # && cd /tmp/build/mjpg-streamer-master/mjpg-streamer-experimental \
#
    && git clone ${REPO} /tmp/build -b "${VERSION}" --depth 1 \
    && cd /tmp/build \
    # patch from https://github.com/jacksonliam/mjpg-streamer/pull/305
    && git apply /tmp/ENABLE_HTTP_MANAGEMENT.patch \
    # # patch to modify dep-checker to look for OpenCV 4.x.x instead of 3.x.x
    # && git apply /tmp/OPENCV_BUMP.patch \
    && cd /tmp/build/mjpg-streamer-experimental \
#
    && mkdir _build \
    && cd _build \
    && cmake \
        -DCMAKE_BUILD_TYPE=Release \
        -DENABLE_HTTP_MANAGEMENT=ON \
        -DWXP_COMPAT=ON \
        .. \
    && make -j ${NPROC} \
    && make install \
    && rm -rf /var/cache/apk/* /tmp/*
#
FROM ${IMAGEBASE} AS main
#
RUN set -xe \
    && apk add --no-cache --purge -uU \
        libgphoto2 \
        libjpeg-turbo \
        sdl12-compat \
#
        libcamera \
        # libcamera-gstreamer \
        libcamera-tools \
        libcamera-v4l2 \
        v4l-utils \
#
        libzmq \
        protobuf-c \
#
        # ffmpeg \
        # opencv \
        # python3 \
        # py3-opencv \
        # py3-numpy \
    && rm -rf /var/cache/apk/* /tmp/*
#
COPY --from=builder /usr/local/bin /usr/local/bin
COPY --from=builder /usr/local/lib /usr/local/lib
COPY --from=builder /usr/local/share /usr/local/share
COPY root/ /
#
ENV \
    MJPGST_PORT=8080
#
EXPOSE ${MJPGST_PORT}
#
ENTRYPOINT ["/init"]
